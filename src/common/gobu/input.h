#ifndef GOBU_INPUT_H
#define GOBU_INPUT_H

#include "gobu.h"

#define MAX_KEYBOARD_KEYS 512
#define MAX_MOUSE_BUTTONS 3
#define MAX_SPRITE_ANIMATIONS 20

typedef enum gobu_enum_input_type
{
    BUDER_EVENT_INVALID,
    BUDER_EVENT_KEY_DOWN,
    BUDER_EVENT_KEY_UP,
    BUDER_EVENT_CHAR,
    BUDER_EVENT_MOUSE_DOWN,
    BUDER_EVENT_MOUSE_UP,
    BUDER_EVENT_MOUSE_SCROLL,
    BUDER_EVENT_MOUSE_MOVE,
    BUDER_EVENT_MOUSE_ENTER,
    BUDER_EVENT_MOUSE_LEAVE,
    BUDER_EVENT_TOUCHES_BEGAN,
    BUDER_EVENT_TOUCHES_MOVED,
    BUDER_EVENT_TOUCHES_ENDED,
    BUDER_EVENT_TOUCHES_CANCELLED,
    BUDER_EVENT_RESIZED,
    BUDER_EVENT_ICONIFIED,
    BUDER_EVENT_RESTORED,
    BUDER_EVENT_FOCUSED,
    BUDER_EVENT_UNFOCUSED,
    BUDER_EVENT_SUSPENDED,
    BUDER_EVENT_RESUMED,
    BUDER_EVENT_QUIT_REQUESTED,
    BUDER_EVENT_CLIPBOARD_PASTED,
    BUDER_EVENT_FILES_DROPPED,
    _BUDER_EVENT_NUM,
    _BUDER_EVENT_FORCE_U32 = 0x7FFFFFFF
} gobu_enum_input_type;

typedef enum gobu_enum_input_keyboard
{
    BUDER_KEY_INVALID = 0,
    BUDER_KEY_SPACE = 32,
    BUDER_KEY_APOSTROPHE = 39, /* ' */
    BUDER_KEY_COMMA = 44,      /* , */
    BUDER_KEY_MINUS = 45,      /* - */
    BUDER_KEY_PERIOD = 46,     /* . */
    BUDER_KEY_SLASH = 47,      /* / */
    BUDER_KEY_0 = 48,
    BUDER_KEY_1 = 49,
    BUDER_KEY_2 = 50,
    BUDER_KEY_3 = 51,
    BUDER_KEY_4 = 52,
    BUDER_KEY_5 = 53,
    BUDER_KEY_6 = 54,
    BUDER_KEY_7 = 55,
    BUDER_KEY_8 = 56,
    BUDER_KEY_9 = 57,
    BUDER_KEY_SEMICOLON = 59, /* ; */
    BUDER_KEY_EQUAL = 61,     /* = */
    BUDER_KEY_A = 65,
    BUDER_KEY_B = 66,
    BUDER_KEY_C = 67,
    BUDER_KEY_D = 68,
    BUDER_KEY_E = 69,
    BUDER_KEY_F = 70,
    BUDER_KEY_G = 71,
    BUDER_KEY_H = 72,
    BUDER_KEY_I = 73,
    BUDER_KEY_J = 74,
    BUDER_KEY_K = 75,
    BUDER_KEY_L = 76,
    BUDER_KEY_M = 77,
    BUDER_KEY_N = 78,
    BUDER_KEY_O = 79,
    BUDER_KEY_P = 80,
    BUDER_KEY_Q = 81,
    BUDER_KEY_R = 82,
    BUDER_KEY_S = 83,
    BUDER_KEY_T = 84,
    BUDER_KEY_U = 85,
    BUDER_KEY_V = 86,
    BUDER_KEY_W = 87,
    BUDER_KEY_X = 88,
    BUDER_KEY_Y = 89,
    BUDER_KEY_Z = 90,
    BUDER_KEY_LEFT_BRACKET = 91,  /* [ */
    BUDER_KEY_BACKSLASH = 92,     /* \ */
    BUDER_KEY_RIGHT_BRACKET = 93, /* ] */
    BUDER_KEY_GRAVE_ACCENT = 96,  /* ` */
    BUDER_KEY_WORLD_1 = 161,      /* non-US #1 */
    BUDER_KEY_WORLD_2 = 162,      /* non-US #2 */
    BUDER_KEY_ESCAPE = 256,
    BUDER_KEY_ENTER = 257,
    BUDER_KEY_TAB = 258,
    BUDER_KEY_BACKSPACE = 259,
    BUDER_KEY_INSERT = 260,
    BUDER_KEY_DELETE = 261,
    BUDER_KEY_RIGHT = 262,
    BUDER_KEY_LEFT = 263,
    BUDER_KEY_DOWN = 264,
    BUDER_KEY_UP = 265,
    BUDER_KEY_PAGE_UP = 266,
    BUDER_KEY_PAGE_DOWN = 267,
    BUDER_KEY_HOME = 268,
    BUDER_KEY_END = 269,
    BUDER_KEY_CAPS_LOCK = 280,
    BUDER_KEY_SCROLL_LOCK = 281,
    BUDER_KEY_NUM_LOCK = 282,
    BUDER_KEY_PRINT_SCREEN = 283,
    BUDER_KEY_PAUSE = 284,
    BUDER_KEY_F1 = 290,
    BUDER_KEY_F2 = 291,
    BUDER_KEY_F3 = 292,
    BUDER_KEY_F4 = 293,
    BUDER_KEY_F5 = 294,
    BUDER_KEY_F6 = 295,
    BUDER_KEY_F7 = 296,
    BUDER_KEY_F8 = 297,
    BUDER_KEY_F9 = 298,
    BUDER_KEY_F10 = 299,
    BUDER_KEY_F11 = 300,
    BUDER_KEY_F12 = 301,
    BUDER_KEY_F13 = 302,
    BUDER_KEY_F14 = 303,
    BUDER_KEY_F15 = 304,
    BUDER_KEY_F16 = 305,
    BUDER_KEY_F17 = 306,
    BUDER_KEY_F18 = 307,
    BUDER_KEY_F19 = 308,
    BUDER_KEY_F20 = 309,
    BUDER_KEY_F21 = 310,
    BUDER_KEY_F22 = 311,
    BUDER_KEY_F23 = 312,
    BUDER_KEY_F24 = 313,
    BUDER_KEY_F25 = 314,
    BUDER_KEY_KP_0 = 320,
    BUDER_KEY_KP_1 = 321,
    BUDER_KEY_KP_2 = 322,
    BUDER_KEY_KP_3 = 323,
    BUDER_KEY_KP_4 = 324,
    BUDER_KEY_KP_5 = 325,
    BUDER_KEY_KP_6 = 326,
    BUDER_KEY_KP_7 = 327,
    BUDER_KEY_KP_8 = 328,
    BUDER_KEY_KP_9 = 329,
    BUDER_KEY_KP_DECIMAL = 330,
    BUDER_KEY_KP_DIVIDE = 331,
    BUDER_KEY_KP_MULTIPLY = 332,
    BUDER_KEY_KP_SUBTRACT = 333,
    BUDER_KEY_KP_ADD = 334,
    BUDER_KEY_KP_ENTER = 335,
    BUDER_KEY_KP_EQUAL = 336,
    BUDER_KEY_LEFT_SHIFT = 340,
    BUDER_KEY_LEFT_CONTROL = 341,
    BUDER_KEY_LEFT_ALT = 342,
    BUDER_KEY_LEFT_SUPER = 343,
    BUDER_KEY_RIGHT_SHIFT = 344,
    BUDER_KEY_RIGHT_CONTROL = 345,
    BUDER_KEY_RIGHT_ALT = 346,
    BUDER_KEY_RIGHT_SUPER = 347,
    BUDER_KEY_MENU = 348,
} gobu_enum_input_keyboard;

typedef enum gobu_enum_input_mousebutton
{
    BUDER_MOUSEBUTTON_LEFT = 0,
    BUDER_MOUSEBUTTON_RIGHT = 1,
    BUDER_MOUSEBUTTON_MIDDLE = 2,
    BUDER_MOUSEBUTTON_INVALID = 3,
} gobu_enum_input_mousebutton;

typedef struct gobu_event_t
{
    gobu_enum_input_type type;
    gobu_enum_input_keyboard key;
    gobu_enum_input_mousebutton mouse_button;
    uint32_t char_code;
    int width;
    int height;
    float mouse_x;
    float mouse_y;
    float mouse_dx;
    float mouse_dy;
    float scroll_x;
    float scroll_y;
} gobu_event_t;


#endif // GOBU_INPUT_H
