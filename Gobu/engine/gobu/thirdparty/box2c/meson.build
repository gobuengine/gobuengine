c = meson.get_compiler('c')

box2d_dep = [c.find_library('m')]

box2d_src = [
'src/aabb.c',
'src/allocate.c',
'src/allocate.h',
'src/array.c',
'src/array.h',
'src/bitset.c',
'src/bitset.h',
'src/block_allocator.c',
'src/block_allocator.h',
'src/body.c',
'src/body.h',
'src/broad_phase.c',
'src/broad_phase.h',
'src/contact.c',
'src/contact.h',
'src/contact_solver.c',
'src/contact_solver.h',
'src/core.c',
'src/core.h',
'src/distance.c',
'src/distance_joint.c',
'src/dynamic_tree.c',
'src/geometry.c',
'src/graph.c',
'src/graph.h',
'src/hull.c',
'src/island.c',
'src/island.h',
'src/joint.c',
'src/joint.h',
'src/manifold.c',
'src/math.c',
'src/mouse_joint.c',
'src/polygon_shape.h',
'src/pool.c',
'src/pool.h',
'src/prismatic_joint.c',
'src/revolute_joint.c',
'src/shape.c',
'src/shape.h',
'src/solver_data.h',
'src/stack_allocator.c',
'src/stack_allocator.h',
'src/table.c',
'src/table.h',
'src/timer.c',
'src/types.c',
'src/weld_joint.c',
'src/world.c',
'src/world.h'
]

argst = ['-Wall', '-Wextra', '-Wpedantic', '-Werror', '-mavx']

libbox2d = static_library('box2d',
    box2d_src,
    dependencies: box2d_dep,
    include_directories:['include'],
    c_args : argst,
)
