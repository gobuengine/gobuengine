[{"name":"HealthComponent","code":"use TransformComponent as transform;\nuse VelocityComponent as velocity;\n\nstruct HealthComponent {\n\tmaxHealth: float,\n\thealth: float,\n\tcurrentHealth: float,\n}\n\nfn Ready(self) {\n  self.health = 15\n}\n\nfn Update(self) {\n  transform.rotation += velocity.x\n}\n\npub fn ApplyDamage(self, damage: float) {\n  self.health -=damage\n}\n"},{"name":"VelocityComponent","code":"velocity_x : float = 0.0;\nvelocity_y : float = 10.0;\nvelocity_z  = 120.0;\nconst velocity_w = 100;\n\ndiccionario = {  \"key\":\"value\", 2:3  };\n\nenum {  STATE_0, STATE_1 };\nenum State { STATE_N_0, STATE_N_1 };\n\nv2 = Vector2(1, 2)\n\nfn ready():\n\tsuper."},{"name":"AutoRotate","code":"\n\nfn Ready(self) {\n\n}\n\nfn Update(self) {\n\n}\n"}]